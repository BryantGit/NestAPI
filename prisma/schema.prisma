// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//Modelos o Tablas

model User{
  id String @id @default(uuid())
  email String @unique
  password String?
  firstName String?
  secondName String?
  lastName String?
  seconLastName String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Usuario {
  id         Int          @id @default(autoincrement())
  nombre     String
  correo     String       @unique
  pasword    String
  empresaId  Int?         // Relación con empresa (opcional si el usuario puede no tener una empresa)
  empresa    Empresa?     @relation(fields: [empresaId], references: [id])
  actividades Actividad[]
  rol        Roles @default(NORMAL) //ROL POR DEFECTO
  createdAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Empresa {
  id        Int        @id @default(autoincrement())
  nombre    String
  usuarios  Usuario[]  // Relación inversa con usuarios
  createdAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Actividad {
  id         Int      @id @default(autoincrement())
  titulo     String
  descripcion String?
  usuarioId  Int
  usuario    Usuario   @relation(fields: [usuarioId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Roles{
  ADMIN
  NORMAL
}